import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import CheckmarkIcon from "../components/Icons/CheckmarkIcon";
import banner from "../img/banner.png";

import Filters from "../components/Filters";
import Subjects from "../components/Subjects";
import Tutors from "../components/Tutors";
import Demands from "../components/Demands";
import axios from "axios";
import { CLIENT_DOMAIN } from "@lib/clientConstants";
import { useRouter } from "next/router";
import Layout from "@components/layout";
import { ReactElement } from "react";
import { GetServerSidePropsContext, InferGetServerSidePropsType } from "next";
import authService from "@lib/service/authService";

const Home = (
  props: InferGetServerSidePropsType<typeof getServerSideProps>
) => {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <div className="flex h-96 w-full items-center justify-center bg-hero-image bg-cover">
        <div>
          <h1 className="mb-2 text-center text-4xl text-white">
            Your best tutors, at your home
          </h1>

          <p className="mb-10 text-center text-gray-300">
            Find the right tutor for your children
          </p>

          <Filters />
        </div>
      </div>

      <div>
        <Subjects></Subjects>
      </div>

      <div className="bg-gray-100">
        <Tutors></Tutors>
      </div>

      <div className="">
        <Demands></Demands>
      </div>

      <div className="bg-blue-100">
        <div className="mx-40 py-6">
          <div>
            <h1 className="mb-6 text-2xl font-bold">
              Find the right tutor for all levels
            </h1>
            <div className="flex place-items-center justify-between">
              <div className="w-full gap-8">
                <div className="mb-6">
                  <div className="mb-2 flex gap-2">
                    <CheckmarkIcon />
                    <p className="text-base font-bold">
                      Access to many talented tutors nationwide
                    </p>
                  </div>
                  <p className="text-sm font-normal text-gray-700">
                    Find the right tutor that suits you most, for the best cost.
                  </p>
                </div>

                <div className="mb-6">
                  <div className="mb-2 flex gap-2">
                    <CheckmarkIcon />
                    <p className="text-base font-bold">Free 1 day trial</p>
                  </div>
                  <p className="text-sm font-normal text-gray-700">
                    Trial class for one day before paying the tutor fee.
                  </p>
                </div>

                <div className="mb-6">
                  <div className="mb-2 flex gap-2">
                    <CheckmarkIcon />
                    <p className="text-base font-bold">Protected payments</p>
                  </div>
                  <p className="text-sm font-normal text-gray-700">
                    Always know what you&apos;ll pay upfront, no costs incurred.
                  </p>
                </div>

                <div className="mb-6">
                  <div className="mb-2 flex gap-2">
                    <CheckmarkIcon />
                    <p className="text-base font-bold">Customer support 24/7</p>
                  </div>
                  <p className="text-sm font-normal text-gray-700">
                    Contact our support team if you have any concerns.
                  </p>
                </div>
              </div>
              <div className="flex w-full justify-end">
                <Image className="w-max" src={banner} alt="banner" />
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

interface LayoutProps extends ReactElement {
  props: InferGetServerSidePropsType<typeof getServerSideProps>;
}

Home.getLayout = function getLayout(page: LayoutProps) {
  return <Layout user={page.props.user}>{page}</Layout>;
};

export const getServerSideProps = async (
  context: GetServerSidePropsContext
) => {
  const access_token = context.req.cookies?.access_token;

  let userResponse;
  if (access_token) {
    userResponse = await authService.getUser(access_token);
  }

  let user;
  if (userResponse && "username" in userResponse && "roles" in userResponse) {
    user = userResponse;
  } else {
    user = null;
  }

  return { props: { user } };
};

export default Home;
